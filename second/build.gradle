import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id "com.moowork.node" version "1.2.0"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

def nodeVersion = '8.0.0'

ext.configureNode =  { -> 
    node {
      version = nodeVersion
      download = true
      nodeModulesDir = file("${projectDir}")
    }
}

task npmInstallation(type: NpmTask) {
    configureNode()
    inputs.file('package.json')
    outputs.upToDateWhen { file('node_modules').exists() }
    npmCommand = ['install']
}

task webpack(type: Exec, dependsOn: 'npmInstallation') { 
	inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
	inputs.dir("src/main/WebContent/").withPathSensitivity(PathSensitivity.RELATIVE)
	outputs.dir("$buildDir/js")
	outputs.cacheIf { true }
    commandLine "$projectDir/node_modules/.bin/" + (Os.isFamily(Os.FAMILY_WINDOWS) ? "webpack.cmd" : "webpack"), "src/main/WebContent/js/index.js", "$buildDir/js/bundle.js"
}

